<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/event-stream-20" enabled="true">
          <stringProp name="HTTPSampler.domain">rci.opscoreflighttracking-qa.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/event-stream</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="channels" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">channels</stringProp>
                <stringProp name="Argument.value">alerts</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="t" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">t</stringProp>
                <stringProp name="Argument.value">1729700384993</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://rci.opscoreflighttracking-qa.net/main</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/event-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/auth/credentials?format=json-56" enabled="true">
          <stringProp name="HTTPSampler.domain">rci.opscoreflighttracking-qa.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/credentials?format=json</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;userName&quot;:&quot;SubhanQA&quot;,&quot;password&quot;:&quot;Subhan@786&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://rci.opscoreflighttracking-qa.net/signin?returnUrl=%2Fmain</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Tenant" elementType="Header">
                <stringProp name="Header.name">X-Tenant</stringProp>
                <stringProp name="Header.value">rci</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://rci.opscoreflighttracking-qa.net</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/users/17795418981938-57" enabled="true">
          <stringProp name="HTTPSampler.domain">rci.opscoreflighttracking-qa.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/users/17795418981938</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://rci.opscoreflighttracking-qa.net/signin?returnUrl=%2Fmain</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_Test" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">0</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-Test" enabled="true">
          <stringProp name="HTTPSampler.domain">rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/credentials?userName=automation1&amp;password=Password2&amp;format=json</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Tenant</stringProp>
                <stringProp name="Header.value">rci</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="Opscore_Login" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/main-85" enabled="true">
          <stringProp name="HTTPSampler.domain">rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/main</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/auth/credentials?format=json-96" enabled="true">
          <stringProp name="HTTPSampler.domain">rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/credentials?format=json</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;userName&quot;:&quot;automation1&quot;,&quot;password&quot;:&quot;Password2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://rci.euw1-alerting.hermesflighttracking-int.net/signin?returnUrl=%2Fmain</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Tenant" elementType="Header">
                <stringProp name="Header.name">X-Tenant</stringProp>
                <stringProp name="Header.value">rci</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Opscore Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <longProp name="ThreadGroup.duration">30</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Feature Login">
          <stringProp name="HTTPSampler.domain">rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/credentials?format=json</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;userName&quot;:&quot;automation1&quot;,&quot;password&quot;:&quot;Password2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://rci.euw1-alerting.hermesflighttracking-int.net/signin?returnUrl=%2Fmain</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Tenant" elementType="Header">
                <stringProp name="Header.name">X-Tenant</stringProp>
                <stringProp name="Header.value">rci</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Simulate Flight">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST Request">
          <stringProp name="HTTPSampler.domain">firehose-simulator.opscoreflighttracking-qa.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/simulate-flight</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;RCI555&quot;,&#xd;
    &quot;registration&quot;: &quot;A6FX5H&quot;,&#xd;
    &quot;messages&quot;: [&#xd;
        {&#xd;
            &quot;type&quot;: &quot;departure&quot;,&#xd;
            &quot;origin&quot;: &quot;VABB&quot;,&#xd;
            &quot;destination&quot;: &quot;VIDP&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;flifo&quot;,&#xd;
            &quot;origin&quot;: &quot;VABB&quot;,&#xd;
            &quot;destination&quot;: &quot;VIDP&quot;,&#xd;
            &quot;scheduledOut&quot;: 1701084600&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 19.08875,&#xd;
            &quot;lon&quot;: 72.84385,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 2000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 19.08742,&#xd;
            &quot;lon&quot;: 72.77143,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 4000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 20.15861,&#xd;
            &quot;lon&quot;: 72.86742,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 5000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 20.29321,&#xd;
            &quot;lon&quot;: 72.88502,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 10000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 21.0607,&#xd;
            &quot;lon&quot;: 72.95771,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 15000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 21.18937,&#xd;
            &quot;lon&quot;: 72.97134,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 15000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 22.09784,&#xd;
            &quot;lon&quot;: 73.31614,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 15000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 22.2317,&#xd;
            &quot;lon&quot;: 73.36825,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 18000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.01192,&#xd;
            &quot;lon&quot;: 73.67517,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.20508,&#xd;
            &quot;lon&quot;: 73.75173,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.33679,&#xd;
            &quot;lon&quot;: 73.80391,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.47043,&#xd;
            &quot;lon&quot;: 73.85712,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.66325,&#xd;
            &quot;lon&quot;: 73.9341,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.79392,&#xd;
            &quot;lon&quot;: 73.98644,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 23.92389,&#xd;
            &quot;lon&quot;: 74.03837,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.05402,&#xd;
            &quot;lon&quot;: 74.09063,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.19803,&#xd;
            &quot;lon&quot;: 74.14856,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.32895,&#xd;
            &quot;lon&quot;: 74.20146,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.46051,&#xd;
            &quot;lon&quot;: 74.25471,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.58871,&#xd;
            &quot;lon&quot;: 74.30696,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.72208,&#xd;
            &quot;lon&quot;: 74.36081,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 24.91834,&#xd;
            &quot;lon&quot;: 74.44056,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.04906,&#xd;
            &quot;lon&quot;: 74.4942,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.17838,&#xd;
            &quot;lon&quot;: 74.54692,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.3726,&#xd;
            &quot;lon&quot;: 74.62723,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.50127,&#xd;
            &quot;lon&quot;: 74.6806,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.69381,&#xd;
            &quot;lon&quot;: 74.76041,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.82239,&#xd;
            &quot;lon&quot;: 74.81389,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 25.95441,&#xd;
            &quot;lon&quot;: 74.8686,&#xd;
            &quot;delay&quot;: 30,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 26.09607,&#xd;
            &quot;lon&quot;: 74.92766,&#xd;
            &quot;delay&quot;: 60,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 26.22235,&#xd;
            &quot;lon&quot;: 74.98076,&#xd;
            &quot;delay&quot;: 60,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 26.41054,&#xd;
            &quot;lon&quot;: 75.05958,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 26.53491,&#xd;
            &quot;lon&quot;: 75.11145,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 27.12199,&#xd;
            &quot;lon&quot;: 75.35892,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 28250&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 27.29526,&#xd;
            &quot;lon&quot;: 75.48644,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 10000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 27.93086,&#xd;
            &quot;lon&quot;: 76.14754,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 4000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 28.56999,&#xd;
            &quot;lon&quot;: 77.11251,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 1000&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;position&quot;,&#xd;
            &quot;lat&quot;: 28.56999,&#xd;
            &quot;lon&quot;: 77.11251,&#xd;
            &quot;delay&quot;: 15,&#xd;
            &quot;heading&quot;: 270,&#xd;
            &quot;altitude&quot;: 500&#xd;
        },&#xd;
        {&#xd;
            &quot;type&quot;: &quot;arrival&quot;,&#xd;
            &quot;origin&quot;: &quot;VABB&quot;,&#xd;
            &quot;destination&quot;: &quot;VIDP&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://rci.opscoreflighttracking-qa.net//signin?returnUrl=%2Fmain</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Tenant" elementType="Header">
                <stringProp name="Header.name">X-Tenant</stringProp>
                <stringProp name="Header.value">rci</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://rci.euw1-alerting.hermesflighttracking-int.net</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
